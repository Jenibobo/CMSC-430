Terminals unused in grammar

    NOTOP


Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';'
    3                | error ';'

    4 optional_variable: ε
    5                  | variable
    6                  | error ';'

    7 variable: IDENTIFIER ':' type IS statement_

    8 parameters: ε
    9           | parameters ',' parameter
   10           | parameter

   11 parameter: IDENTIFIER ':' type

   12 type: INTEGER
   13     | REAL
   14     | BOOLEAN

   15 body: BEGIN_ statement_ END ';'

   16 statement_: statement ';'
   17           | error ';'

   18 statement: expression
   19          | REDUCE operator reductions ENDREDUCE
   20          | IF expression THEN statement_ ELSE statement_ ENDIF
   21          | CASE expression IS case OTHERS ARROW statement_ ENDCASE

   22 operator: ADDOP
   23         | MULOP

   24 case: WHEN INT_LITERAL ARROW statement_

   25 reductions: reductions statement_
   26           | ε

   27 expression: expression ANDOP relation
   28           | or_op

   29 or_op: expression OROP relation
   30      | relation

   31 relation: relation RELOP term
   32         | term

   33 term: term ADDOP rem_op
   34     | rem_op

   35 factor: factor MULOP exp_op
   36       | exp_op

   37 rem_op: rem_op REMOP factor
   38       | factor

   39 exp_op: primary EXPOP exp_op
   40       | primary

   41 primary: '(' expression ')'
   42        | INT_LITERAL
   43        | REAL_LITERAL
   44        | BOOL_LITERAL
   45        | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 41
    ')' (41) 41
    ',' (44) 9
    ':' (58) 7 11
    ';' (59) 2 3 6 15 16 17
    error (256) 3 6 17
    IDENTIFIER (258) 2 7 11 45
    INT_LITERAL (259) 24 42
    REAL_LITERAL (260) 43
    BOOL_LITERAL (261) 44
    ADDOP (262) 22 33
    MULOP (263) 23 35
    RELOP (264) 31
    ANDOP (265) 27
    OROP (266) 29
    NOTOP (267)
    REMOP (268) 37
    EXPOP (269) 39
    BEGIN_ (270) 15
    BOOLEAN (271) 14
    END (272) 15
    ENDREDUCE (273) 19
    FUNCTION (274) 2
    INTEGER (275) 12
    IS (276) 7 21
    REDUCE (277) 19
    RETURNS (278) 2
    REAL (279) 13
    IF (280) 20
    THEN (281) 20
    ELSE (282) 20
    ENDIF (283) 20
    CASE (284) 21
    OTHERS (285) 21
    ARROW (286) 21 24
    ENDCASE (287) 21
    WHEN (288) 24


Nonterminals, with rules where they appear

    $accept (39)
        on left: 0
    function (40)
        on left: 1
        on right: 0
    function_header (41)
        on left: 2 3
        on right: 1
    optional_variable (42)
        on left: 4 5 6
        on right: 1
    variable (43)
        on left: 7
        on right: 5
    parameters (44)
        on left: 8 9 10
        on right: 2 9
    parameter (45)
        on left: 11
        on right: 9 10
    type (46)
        on left: 12 13 14
        on right: 2 7 11
    body (47)
        on left: 15
        on right: 1
    statement_ (48)
        on left: 16 17
        on right: 7 15 20 21 24 25
    statement (49)
        on left: 18 19 20 21
        on right: 16
    operator (50)
        on left: 22 23
        on right: 19
    case (51)
        on left: 24
        on right: 21
    reductions (52)
        on left: 25 26
        on right: 19 25
    expression (53)
        on left: 27 28
        on right: 18 20 21 27 29 41
    or_op (54)
        on left: 29 30
        on right: 28
    relation (55)
        on left: 31 32
        on right: 27 29 30 31
    term (56)
        on left: 33 34
        on right: 31 32 33
    factor (57)
        on left: 35 36
        on right: 35 37 38
    rem_op (58)
        on left: 37 38
        on right: 33 34 37
    exp_op (59)
        on left: 39 40
        on right: 35 36 39
    primary (60)
        on left: 41 42 43 44 45
        on right: 39 40


State 0

    0 $accept: • function $end

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    function         go to state 3
    function_header  go to state 4


State 1

    3 function_header: error • ';'

    ';'  shift, and go to state 5


State 2

    2 function_header: FUNCTION • IDENTIFIER parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 6


State 3

    0 $accept: function • $end

    $end  shift, and go to state 7


State 4

    1 function: function_header • optional_variable body

    error       shift, and go to state 8
    IDENTIFIER  shift, and go to state 9

    BEGIN_  reduce using rule 4 (optional_variable)

    optional_variable  go to state 10
    variable           go to state 11


State 5

    3 function_header: error ';' •

    $default  reduce using rule 3 (function_header)


State 6

    2 function_header: FUNCTION IDENTIFIER • parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 12

    $default  reduce using rule 8 (parameters)

    parameters  go to state 13
    parameter   go to state 14


State 7

    0 $accept: function $end •

    $default  accept


State 8

    6 optional_variable: error • ';'

    ';'  shift, and go to state 15


State 9

    7 variable: IDENTIFIER • ':' type IS statement_

    ':'  shift, and go to state 16


State 10

    1 function: function_header optional_variable • body

    BEGIN_  shift, and go to state 17

    body  go to state 18


State 11

    5 optional_variable: variable •

    $default  reduce using rule 5 (optional_variable)


State 12

   11 parameter: IDENTIFIER • ':' type

    ':'  shift, and go to state 19


State 13

    2 function_header: FUNCTION IDENTIFIER parameters • RETURNS type ';'
    9 parameters: parameters • ',' parameter

    RETURNS  shift, and go to state 20
    ','      shift, and go to state 21


State 14

   10 parameters: parameter •

    $default  reduce using rule 10 (parameters)


State 15

    6 optional_variable: error ';' •

    $default  reduce using rule 6 (optional_variable)


State 16

    7 variable: IDENTIFIER ':' • type IS statement_

    BOOLEAN  shift, and go to state 22
    INTEGER  shift, and go to state 23
    REAL     shift, and go to state 24

    type  go to state 25


State 17

   15 body: BEGIN_ • statement_ END ';'

    error         shift, and go to state 26
    IDENTIFIER    shift, and go to state 27
    INT_LITERAL   shift, and go to state 28
    REAL_LITERAL  shift, and go to state 29
    BOOL_LITERAL  shift, and go to state 30
    REDUCE        shift, and go to state 31
    IF            shift, and go to state 32
    CASE          shift, and go to state 33
    '('           shift, and go to state 34

    statement_  go to state 35
    statement   go to state 36
    expression  go to state 37
    or_op       go to state 38
    relation    go to state 39
    term        go to state 40
    factor      go to state 41
    rem_op      go to state 42
    exp_op      go to state 43
    primary     go to state 44


State 18

    1 function: function_header optional_variable body •

    $default  reduce using rule 1 (function)


State 19

   11 parameter: IDENTIFIER ':' • type

    BOOLEAN  shift, and go to state 22
    INTEGER  shift, and go to state 23
    REAL     shift, and go to state 24

    type  go to state 45


State 20

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS • type ';'

    BOOLEAN  shift, and go to state 22
    INTEGER  shift, and go to state 23
    REAL     shift, and go to state 24

    type  go to state 46


State 21

    9 parameters: parameters ',' • parameter

    IDENTIFIER  shift, and go to state 12

    parameter  go to state 47


State 22

   14 type: BOOLEAN •

    $default  reduce using rule 14 (type)


State 23

   12 type: INTEGER •

    $default  reduce using rule 12 (type)


State 24

   13 type: REAL •

    $default  reduce using rule 13 (type)


State 25

    7 variable: IDENTIFIER ':' type • IS statement_

    IS  shift, and go to state 48


State 26

   17 statement_: error • ';'

    ';'  shift, and go to state 49


State 27

   45 primary: IDENTIFIER •

    $default  reduce using rule 45 (primary)


State 28

   42 primary: INT_LITERAL •

    $default  reduce using rule 42 (primary)


State 29

   43 primary: REAL_LITERAL •

    $default  reduce using rule 43 (primary)


State 30

   44 primary: BOOL_LITERAL •

    $default  reduce using rule 44 (primary)


State 31

   19 statement: REDUCE • operator reductions ENDREDUCE

    ADDOP  shift, and go to state 50
    MULOP  shift, and go to state 51

    operator  go to state 52


State 32

   20 statement: IF • expression THEN statement_ ELSE statement_ ENDIF

    IDENTIFIER    shift, and go to state 27
    INT_LITERAL   shift, and go to state 28
    REAL_LITERAL  shift, and go to state 29
    BOOL_LITERAL  shift, and go to state 30
    '('           shift, and go to state 34

    expression  go to state 53
    or_op       go to state 38
    relation    go to state 39
    term        go to state 40
    factor      go to state 41
    rem_op      go to state 42
    exp_op      go to state 43
    primary     go to state 44


State 33

   21 statement: CASE • expression IS case OTHERS ARROW statement_ ENDCASE

    IDENTIFIER    shift, and go to state 27
    INT_LITERAL   shift, and go to state 28
    REAL_LITERAL  shift, and go to state 29
    BOOL_LITERAL  shift, and go to state 30
    '('           shift, and go to state 34

    expression  go to state 54
    or_op       go to state 38
    relation    go to state 39
    term        go to state 40
    factor      go to state 41
    rem_op      go to state 42
    exp_op      go to state 43
    primary     go to state 44


State 34

   41 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 27
    INT_LITERAL   shift, and go to state 28
    REAL_LITERAL  shift, and go to state 29
    BOOL_LITERAL  shift, and go to state 30
    '('           shift, and go to state 34

    expression  go to state 55
    or_op       go to state 38
    relation    go to state 39
    term        go to state 40
    factor      go to state 41
    rem_op      go to state 42
    exp_op      go to state 43
    primary     go to state 44


State 35

   15 body: BEGIN_ statement_ • END ';'

    END  shift, and go to state 56


State 36

   16 statement_: statement • ';'

    ';'  shift, and go to state 57


State 37

   18 statement: expression •
   27 expression: expression • ANDOP relation
   29 or_op: expression • OROP relation

    ANDOP  shift, and go to state 58
    OROP   shift, and go to state 59

    $default  reduce using rule 18 (statement)


State 38

   28 expression: or_op •

    $default  reduce using rule 28 (expression)


State 39

   30 or_op: relation •
   31 relation: relation • RELOP term

    RELOP  shift, and go to state 60

    $default  reduce using rule 30 (or_op)


State 40

   32 relation: term •
   33 term: term • ADDOP rem_op

    ADDOP  shift, and go to state 61

    $default  reduce using rule 32 (relation)


State 41

   35 factor: factor • MULOP exp_op
   38 rem_op: factor •

    MULOP  shift, and go to state 62

    $default  reduce using rule 38 (rem_op)


State 42

   34 term: rem_op •
   37 rem_op: rem_op • REMOP factor

    REMOP  shift, and go to state 63

    $default  reduce using rule 34 (term)


State 43

   36 factor: exp_op •

    $default  reduce using rule 36 (factor)


State 44

   39 exp_op: primary • EXPOP exp_op
   40       | primary •

    EXPOP  shift, and go to state 64

    $default  reduce using rule 40 (exp_op)


State 45

   11 parameter: IDENTIFIER ':' type •

    $default  reduce using rule 11 (parameter)


State 46

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type • ';'

    ';'  shift, and go to state 65


State 47

    9 parameters: parameters ',' parameter •

    $default  reduce using rule 9 (parameters)


State 48

    7 variable: IDENTIFIER ':' type IS • statement_

    error         shift, and go to state 26
    IDENTIFIER    shift, and go to state 27
    INT_LITERAL   shift, and go to state 28
    REAL_LITERAL  shift, and go to state 29
    BOOL_LITERAL  shift, and go to state 30
    REDUCE        shift, and go to state 31
    IF            shift, and go to state 32
    CASE          shift, and go to state 33
    '('           shift, and go to state 34

    statement_  go to state 66
    statement   go to state 36
    expression  go to state 37
    or_op       go to state 38
    relation    go to state 39
    term        go to state 40
    factor      go to state 41
    rem_op      go to state 42
    exp_op      go to state 43
    primary     go to state 44


State 49

   17 statement_: error ';' •

    $default  reduce using rule 17 (statement_)


State 50

   22 operator: ADDOP •

    $default  reduce using rule 22 (operator)


State 51

   23 operator: MULOP •

    $default  reduce using rule 23 (operator)


State 52

   19 statement: REDUCE operator • reductions ENDREDUCE

    $default  reduce using rule 26 (reductions)

    reductions  go to state 67


State 53

   20 statement: IF expression • THEN statement_ ELSE statement_ ENDIF
   27 expression: expression • ANDOP relation
   29 or_op: expression • OROP relation

    ANDOP  shift, and go to state 58
    OROP   shift, and go to state 59
    THEN   shift, and go to state 68


State 54

   21 statement: CASE expression • IS case OTHERS ARROW statement_ ENDCASE
   27 expression: expression • ANDOP relation
   29 or_op: expression • OROP relation

    ANDOP  shift, and go to state 58
    OROP   shift, and go to state 59
    IS     shift, and go to state 69


State 55

   27 expression: expression • ANDOP relation
   29 or_op: expression • OROP relation
   41 primary: '(' expression • ')'

    ANDOP  shift, and go to state 58
    OROP   shift, and go to state 59
    ')'    shift, and go to state 70


State 56

   15 body: BEGIN_ statement_ END • ';'

    ';'  shift, and go to state 71


State 57

   16 statement_: statement ';' •

    $default  reduce using rule 16 (statement_)


State 58

   27 expression: expression ANDOP • relation

    IDENTIFIER    shift, and go to state 27
    INT_LITERAL   shift, and go to state 28
    REAL_LITERAL  shift, and go to state 29
    BOOL_LITERAL  shift, and go to state 30
    '('           shift, and go to state 34

    relation  go to state 72
    term      go to state 40
    factor    go to state 41
    rem_op    go to state 42
    exp_op    go to state 43
    primary   go to state 44


State 59

   29 or_op: expression OROP • relation

    IDENTIFIER    shift, and go to state 27
    INT_LITERAL   shift, and go to state 28
    REAL_LITERAL  shift, and go to state 29
    BOOL_LITERAL  shift, and go to state 30
    '('           shift, and go to state 34

    relation  go to state 73
    term      go to state 40
    factor    go to state 41
    rem_op    go to state 42
    exp_op    go to state 43
    primary   go to state 44


State 60

   31 relation: relation RELOP • term

    IDENTIFIER    shift, and go to state 27
    INT_LITERAL   shift, and go to state 28
    REAL_LITERAL  shift, and go to state 29
    BOOL_LITERAL  shift, and go to state 30
    '('           shift, and go to state 34

    term     go to state 74
    factor   go to state 41
    rem_op   go to state 42
    exp_op   go to state 43
    primary  go to state 44


State 61

   33 term: term ADDOP • rem_op

    IDENTIFIER    shift, and go to state 27
    INT_LITERAL   shift, and go to state 28
    REAL_LITERAL  shift, and go to state 29
    BOOL_LITERAL  shift, and go to state 30
    '('           shift, and go to state 34

    factor   go to state 41
    rem_op   go to state 75
    exp_op   go to state 43
    primary  go to state 44


State 62

   35 factor: factor MULOP • exp_op

    IDENTIFIER    shift, and go to state 27
    INT_LITERAL   shift, and go to state 28
    REAL_LITERAL  shift, and go to state 29
    BOOL_LITERAL  shift, and go to state 30
    '('           shift, and go to state 34

    exp_op   go to state 76
    primary  go to state 44


State 63

   37 rem_op: rem_op REMOP • factor

    IDENTIFIER    shift, and go to state 27
    INT_LITERAL   shift, and go to state 28
    REAL_LITERAL  shift, and go to state 29
    BOOL_LITERAL  shift, and go to state 30
    '('           shift, and go to state 34

    factor   go to state 77
    exp_op   go to state 43
    primary  go to state 44


State 64

   39 exp_op: primary EXPOP • exp_op

    IDENTIFIER    shift, and go to state 27
    INT_LITERAL   shift, and go to state 28
    REAL_LITERAL  shift, and go to state 29
    BOOL_LITERAL  shift, and go to state 30
    '('           shift, and go to state 34

    exp_op   go to state 78
    primary  go to state 44


State 65

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';' •

    $default  reduce using rule 2 (function_header)


State 66

    7 variable: IDENTIFIER ':' type IS statement_ •

    $default  reduce using rule 7 (variable)


State 67

   19 statement: REDUCE operator reductions • ENDREDUCE
   25 reductions: reductions • statement_

    error         shift, and go to state 26
    IDENTIFIER    shift, and go to state 27
    INT_LITERAL   shift, and go to state 28
    REAL_LITERAL  shift, and go to state 29
    BOOL_LITERAL  shift, and go to state 30
    ENDREDUCE     shift, and go to state 79
    REDUCE        shift, and go to state 31
    IF            shift, and go to state 32
    CASE          shift, and go to state 33
    '('           shift, and go to state 34

    statement_  go to state 80
    statement   go to state 36
    expression  go to state 37
    or_op       go to state 38
    relation    go to state 39
    term        go to state 40
    factor      go to state 41
    rem_op      go to state 42
    exp_op      go to state 43
    primary     go to state 44


State 68

   20 statement: IF expression THEN • statement_ ELSE statement_ ENDIF

    error         shift, and go to state 26
    IDENTIFIER    shift, and go to state 27
    INT_LITERAL   shift, and go to state 28
    REAL_LITERAL  shift, and go to state 29
    BOOL_LITERAL  shift, and go to state 30
    REDUCE        shift, and go to state 31
    IF            shift, and go to state 32
    CASE          shift, and go to state 33
    '('           shift, and go to state 34

    statement_  go to state 81
    statement   go to state 36
    expression  go to state 37
    or_op       go to state 38
    relation    go to state 39
    term        go to state 40
    factor      go to state 41
    rem_op      go to state 42
    exp_op      go to state 43
    primary     go to state 44


State 69

   21 statement: CASE expression IS • case OTHERS ARROW statement_ ENDCASE

    WHEN  shift, and go to state 82

    case  go to state 83


State 70

   41 primary: '(' expression ')' •

    $default  reduce using rule 41 (primary)


State 71

   15 body: BEGIN_ statement_ END ';' •

    $default  reduce using rule 15 (body)


State 72

   27 expression: expression ANDOP relation •
   31 relation: relation • RELOP term

    RELOP  shift, and go to state 60

    $default  reduce using rule 27 (expression)


State 73

   29 or_op: expression OROP relation •
   31 relation: relation • RELOP term

    RELOP  shift, and go to state 60

    $default  reduce using rule 29 (or_op)


State 74

   31 relation: relation RELOP term •
   33 term: term • ADDOP rem_op

    ADDOP  shift, and go to state 61

    $default  reduce using rule 31 (relation)


State 75

   33 term: term ADDOP rem_op •
   37 rem_op: rem_op • REMOP factor

    REMOP  shift, and go to state 63

    $default  reduce using rule 33 (term)


State 76

   35 factor: factor MULOP exp_op •

    $default  reduce using rule 35 (factor)


State 77

   35 factor: factor • MULOP exp_op
   37 rem_op: rem_op REMOP factor •

    MULOP  shift, and go to state 62

    $default  reduce using rule 37 (rem_op)


State 78

   39 exp_op: primary EXPOP exp_op •

    $default  reduce using rule 39 (exp_op)


State 79

   19 statement: REDUCE operator reductions ENDREDUCE •

    $default  reduce using rule 19 (statement)


State 80

   25 reductions: reductions statement_ •

    $default  reduce using rule 25 (reductions)


State 81

   20 statement: IF expression THEN statement_ • ELSE statement_ ENDIF

    ELSE  shift, and go to state 84


State 82

   24 case: WHEN • INT_LITERAL ARROW statement_

    INT_LITERAL  shift, and go to state 85


State 83

   21 statement: CASE expression IS case • OTHERS ARROW statement_ ENDCASE

    OTHERS  shift, and go to state 86


State 84

   20 statement: IF expression THEN statement_ ELSE • statement_ ENDIF

    error         shift, and go to state 26
    IDENTIFIER    shift, and go to state 27
    INT_LITERAL   shift, and go to state 28
    REAL_LITERAL  shift, and go to state 29
    BOOL_LITERAL  shift, and go to state 30
    REDUCE        shift, and go to state 31
    IF            shift, and go to state 32
    CASE          shift, and go to state 33
    '('           shift, and go to state 34

    statement_  go to state 87
    statement   go to state 36
    expression  go to state 37
    or_op       go to state 38
    relation    go to state 39
    term        go to state 40
    factor      go to state 41
    rem_op      go to state 42
    exp_op      go to state 43
    primary     go to state 44


State 85

   24 case: WHEN INT_LITERAL • ARROW statement_

    ARROW  shift, and go to state 88


State 86

   21 statement: CASE expression IS case OTHERS • ARROW statement_ ENDCASE

    ARROW  shift, and go to state 89


State 87

   20 statement: IF expression THEN statement_ ELSE statement_ • ENDIF

    ENDIF  shift, and go to state 90


State 88

   24 case: WHEN INT_LITERAL ARROW • statement_

    error         shift, and go to state 26
    IDENTIFIER    shift, and go to state 27
    INT_LITERAL   shift, and go to state 28
    REAL_LITERAL  shift, and go to state 29
    BOOL_LITERAL  shift, and go to state 30
    REDUCE        shift, and go to state 31
    IF            shift, and go to state 32
    CASE          shift, and go to state 33
    '('           shift, and go to state 34

    statement_  go to state 91
    statement   go to state 36
    expression  go to state 37
    or_op       go to state 38
    relation    go to state 39
    term        go to state 40
    factor      go to state 41
    rem_op      go to state 42
    exp_op      go to state 43
    primary     go to state 44


State 89

   21 statement: CASE expression IS case OTHERS ARROW • statement_ ENDCASE

    error         shift, and go to state 26
    IDENTIFIER    shift, and go to state 27
    INT_LITERAL   shift, and go to state 28
    REAL_LITERAL  shift, and go to state 29
    BOOL_LITERAL  shift, and go to state 30
    REDUCE        shift, and go to state 31
    IF            shift, and go to state 32
    CASE          shift, and go to state 33
    '('           shift, and go to state 34

    statement_  go to state 92
    statement   go to state 36
    expression  go to state 37
    or_op       go to state 38
    relation    go to state 39
    term        go to state 40
    factor      go to state 41
    rem_op      go to state 42
    exp_op      go to state 43
    primary     go to state 44


State 90

   20 statement: IF expression THEN statement_ ELSE statement_ ENDIF •

    $default  reduce using rule 20 (statement)


State 91

   24 case: WHEN INT_LITERAL ARROW statement_ •

    $default  reduce using rule 24 (case)


State 92

   21 statement: CASE expression IS case OTHERS ARROW statement_ • ENDCASE

    ENDCASE  shift, and go to state 93


State 93

   21 statement: CASE expression IS case OTHERS ARROW statement_ ENDCASE •

    $default  reduce using rule 21 (statement)

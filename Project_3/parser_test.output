Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body

    2 function_header: FUNCTION IDENTIFIER parameter_ RETURNS type ';'
    3                | error ';'

    4 optional_variable: optional_variable variable
    5                  | error ';'
    6                  | ε

    7 variable: IDENTIFIER ':' type IS statement_

    8 parameter_: parameter_ ',' parameter
    9           | parameter
   10           | ε

   11 parameter: IDENTIFIER ':' type

   12 type: INTEGER
   13     | REAL
   14     | BOOLEAN

   15 body: BEGIN_ statement_ END ';'

   16 statement_: statement ';'
   17           | error ';'

   18 statement: expression
   19          | REDUCE operator reduction_ ENDREDUCE
   20          | IF expression THEN statement_
   21          | IF expression THEN statement_ ELSE statement_ ENDIF

   22 $@1: ε

   23 statement: CASE expression $@1 IS case_ OTHERS ARROW statement_ ENDCASE

   24 operator: ADDOP
   25         | MULOP

   26 case_: case_ case
   27      | ε

   28 case: WHEN INT_LITERAL ARROW statement_

   29 reduction_: reduction_ statement_
   30           | ε

   31 expression: expression OROP binary_op relation
   32           | binary_op

   33 binary_op: binary_op ANDOP relation
   34          | relation

   35 relation: relation RELOP term
   36         | term

   37 term: term ADDOP factor
   38     | factor

   39 factor: factor MULOP exp_op
   40       | factor REMOP exp_op
   41       | exp_op

   42 exp_op: unary_op EXPOP exp_op
   43       | unary_op

   44 unary_op: NOTOP primary
   45         | primary

   46 primary: '(' expression ')'
   47        | INT_LITERAL
   48        | REAL_LITERAL
   49        | BOOL_LITERAL
   50        | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 46
    ')' (41) 46
    ',' (44) 8
    ':' (58) 7 11
    ';' (59) 2 3 5 15 16 17
    error (256) 3 5 17
    IDENTIFIER <iden> (258) 2 7 11 50
    INT_LITERAL <value> (259) 28 47
    REAL_LITERAL <value> (260) 48
    BOOL_LITERAL <value> (261) 49
    ADDOP <oper> (262) 24 37
    MULOP <oper> (263) 25 39
    REMOP <oper> (264) 40
    EXPOP <oper> (265) 42
    RELOP <oper> (266) 35
    OROP (267) 31
    ANDOP (268) 33
    NOTOP (269) 44
    INTEGER (270) 12
    REAL (271) 13
    BOOLEAN (272) 14
    BEGIN_ (273) 15
    END (274) 15
    FUNCTION (275) 2
    IS (276) 7 23
    RETURNS (277) 2
    REDUCE (278) 19
    ENDREDUCE (279) 19
    IF (280) 20 21
    THEN (281) 20 21
    ELSE (282) 21
    ENDIF (283) 21
    CASE (284) 23
    WHEN (285) 28
    ARROW (286) 23 28
    OTHERS (287) 23
    ENDCASE (288) 23


Nonterminals, with rules where they appear

    $accept (39)
        on left: 0
    function (40)
        on left: 1
        on right: 0
    function_header (41)
        on left: 2 3
        on right: 1
    optional_variable (42)
        on left: 4 5 6
        on right: 1 4
    variable (43)
        on left: 7
        on right: 4
    parameter_ (44)
        on left: 8 9 10
        on right: 2 8
    parameter (45)
        on left: 11
        on right: 8 9
    type (46)
        on left: 12 13 14
        on right: 2 7 11
    body <value> (47)
        on left: 15
        on right: 1
    statement_ <value> (48)
        on left: 16 17
        on right: 7 15 20 21 23 28 29
    statement <value> (49)
        on left: 18 19 20 21 23
        on right: 16
    $@1 (50)
        on left: 22
        on right: 23
    operator <oper> (51)
        on left: 24 25
        on right: 19
    case_ <value> (52)
        on left: 26 27
        on right: 23 26
    case <value> (53)
        on left: 28
        on right: 26
    reduction_ <value> (54)
        on left: 29 30
        on right: 19 29
    expression <value> (55)
        on left: 31 32
        on right: 18 20 21 23 31 46
    binary_op <value> (56)
        on left: 33 34
        on right: 31 32 33
    relation <value> (57)
        on left: 35 36
        on right: 31 33 34 35
    term <value> (58)
        on left: 37 38
        on right: 35 36 37
    factor <value> (59)
        on left: 39 40 41
        on right: 37 38 39 40
    exp_op <value> (60)
        on left: 42 43
        on right: 39 40 41 42
    unary_op <value> (61)
        on left: 44 45
        on right: 42 43
    primary <value> (62)
        on left: 46 47 48 49 50
        on right: 44 45


State 0

    0 $accept: • function $end

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    function         go to state 3
    function_header  go to state 4


State 1

    3 function_header: error • ';'

    ';'  shift, and go to state 5


State 2

    2 function_header: FUNCTION • IDENTIFIER parameter_ RETURNS type ';'

    IDENTIFIER  shift, and go to state 6


State 3

    0 $accept: function • $end

    $end  shift, and go to state 7


State 4

    1 function: function_header • optional_variable body

    error  shift, and go to state 8

    IDENTIFIER  reduce using rule 6 (optional_variable)
    BEGIN_      reduce using rule 6 (optional_variable)

    optional_variable  go to state 9


State 5

    3 function_header: error ';' •

    $default  reduce using rule 3 (function_header)


State 6

    2 function_header: FUNCTION IDENTIFIER • parameter_ RETURNS type ';'

    IDENTIFIER  shift, and go to state 10

    $default  reduce using rule 10 (parameter_)

    parameter_  go to state 11
    parameter   go to state 12


State 7

    0 $accept: function $end •

    $default  accept


State 8

    5 optional_variable: error • ';'

    ';'  shift, and go to state 13


State 9

    1 function: function_header optional_variable • body
    4 optional_variable: optional_variable • variable

    IDENTIFIER  shift, and go to state 14
    BEGIN_      shift, and go to state 15

    variable  go to state 16
    body      go to state 17


State 10

   11 parameter: IDENTIFIER • ':' type

    ':'  shift, and go to state 18


State 11

    2 function_header: FUNCTION IDENTIFIER parameter_ • RETURNS type ';'
    8 parameter_: parameter_ • ',' parameter

    RETURNS  shift, and go to state 19
    ','      shift, and go to state 20


State 12

    9 parameter_: parameter •

    $default  reduce using rule 9 (parameter_)


State 13

    5 optional_variable: error ';' •

    $default  reduce using rule 5 (optional_variable)


State 14

    7 variable: IDENTIFIER • ':' type IS statement_

    ':'  shift, and go to state 21


State 15

   15 body: BEGIN_ • statement_ END ';'

    error         shift, and go to state 22
    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    REDUCE        shift, and go to state 28
    IF            shift, and go to state 29
    CASE          shift, and go to state 30
    '('           shift, and go to state 31

    statement_  go to state 32
    statement   go to state 33
    expression  go to state 34
    binary_op   go to state 35
    relation    go to state 36
    term        go to state 37
    factor      go to state 38
    exp_op      go to state 39
    unary_op    go to state 40
    primary     go to state 41


State 16

    4 optional_variable: optional_variable variable •

    $default  reduce using rule 4 (optional_variable)


State 17

    1 function: function_header optional_variable body •

    $default  reduce using rule 1 (function)


State 18

   11 parameter: IDENTIFIER ':' • type

    INTEGER  shift, and go to state 42
    REAL     shift, and go to state 43
    BOOLEAN  shift, and go to state 44

    type  go to state 45


State 19

    2 function_header: FUNCTION IDENTIFIER parameter_ RETURNS • type ';'

    INTEGER  shift, and go to state 42
    REAL     shift, and go to state 43
    BOOLEAN  shift, and go to state 44

    type  go to state 46


State 20

    8 parameter_: parameter_ ',' • parameter

    IDENTIFIER  shift, and go to state 10

    parameter  go to state 47


State 21

    7 variable: IDENTIFIER ':' • type IS statement_

    INTEGER  shift, and go to state 42
    REAL     shift, and go to state 43
    BOOLEAN  shift, and go to state 44

    type  go to state 48


State 22

   17 statement_: error • ';'

    ';'  shift, and go to state 49


State 23

   50 primary: IDENTIFIER •

    $default  reduce using rule 50 (primary)


State 24

   47 primary: INT_LITERAL •

    $default  reduce using rule 47 (primary)


State 25

   48 primary: REAL_LITERAL •

    $default  reduce using rule 48 (primary)


State 26

   49 primary: BOOL_LITERAL •

    $default  reduce using rule 49 (primary)


State 27

   44 unary_op: NOTOP • primary

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    '('           shift, and go to state 31

    primary  go to state 50


State 28

   19 statement: REDUCE • operator reduction_ ENDREDUCE

    ADDOP  shift, and go to state 51
    MULOP  shift, and go to state 52

    operator  go to state 53


State 29

   20 statement: IF • expression THEN statement_
   21          | IF • expression THEN statement_ ELSE statement_ ENDIF

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    '('           shift, and go to state 31

    expression  go to state 54
    binary_op   go to state 35
    relation    go to state 36
    term        go to state 37
    factor      go to state 38
    exp_op      go to state 39
    unary_op    go to state 40
    primary     go to state 41


State 30

   23 statement: CASE • expression $@1 IS case_ OTHERS ARROW statement_ ENDCASE

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    '('           shift, and go to state 31

    expression  go to state 55
    binary_op   go to state 35
    relation    go to state 36
    term        go to state 37
    factor      go to state 38
    exp_op      go to state 39
    unary_op    go to state 40
    primary     go to state 41


State 31

   46 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    '('           shift, and go to state 31

    expression  go to state 56
    binary_op   go to state 35
    relation    go to state 36
    term        go to state 37
    factor      go to state 38
    exp_op      go to state 39
    unary_op    go to state 40
    primary     go to state 41


State 32

   15 body: BEGIN_ statement_ • END ';'

    END  shift, and go to state 57


State 33

   16 statement_: statement • ';'

    ';'  shift, and go to state 58


State 34

   18 statement: expression •
   31 expression: expression • OROP binary_op relation

    OROP  shift, and go to state 59

    $default  reduce using rule 18 (statement)


State 35

   32 expression: binary_op •
   33 binary_op: binary_op • ANDOP relation

    ANDOP  shift, and go to state 60

    $default  reduce using rule 32 (expression)


State 36

   34 binary_op: relation •
   35 relation: relation • RELOP term

    RELOP  shift, and go to state 61

    $default  reduce using rule 34 (binary_op)


State 37

   36 relation: term •
   37 term: term • ADDOP factor

    ADDOP  shift, and go to state 62

    $default  reduce using rule 36 (relation)


State 38

   38 term: factor •
   39 factor: factor • MULOP exp_op
   40       | factor • REMOP exp_op

    MULOP  shift, and go to state 63
    REMOP  shift, and go to state 64

    $default  reduce using rule 38 (term)


State 39

   41 factor: exp_op •

    $default  reduce using rule 41 (factor)


State 40

   42 exp_op: unary_op • EXPOP exp_op
   43       | unary_op •

    EXPOP  shift, and go to state 65

    $default  reduce using rule 43 (exp_op)


State 41

   45 unary_op: primary •

    $default  reduce using rule 45 (unary_op)


State 42

   12 type: INTEGER •

    $default  reduce using rule 12 (type)


State 43

   13 type: REAL •

    $default  reduce using rule 13 (type)


State 44

   14 type: BOOLEAN •

    $default  reduce using rule 14 (type)


State 45

   11 parameter: IDENTIFIER ':' type •

    $default  reduce using rule 11 (parameter)


State 46

    2 function_header: FUNCTION IDENTIFIER parameter_ RETURNS type • ';'

    ';'  shift, and go to state 66


State 47

    8 parameter_: parameter_ ',' parameter •

    $default  reduce using rule 8 (parameter_)


State 48

    7 variable: IDENTIFIER ':' type • IS statement_

    IS  shift, and go to state 67


State 49

   17 statement_: error ';' •

    $default  reduce using rule 17 (statement_)


State 50

   44 unary_op: NOTOP primary •

    $default  reduce using rule 44 (unary_op)


State 51

   24 operator: ADDOP •

    $default  reduce using rule 24 (operator)


State 52

   25 operator: MULOP •

    $default  reduce using rule 25 (operator)


State 53

   19 statement: REDUCE operator • reduction_ ENDREDUCE

    $default  reduce using rule 30 (reduction_)

    reduction_  go to state 68


State 54

   20 statement: IF expression • THEN statement_
   21          | IF expression • THEN statement_ ELSE statement_ ENDIF
   31 expression: expression • OROP binary_op relation

    OROP  shift, and go to state 59
    THEN  shift, and go to state 69


State 55

   23 statement: CASE expression • $@1 IS case_ OTHERS ARROW statement_ ENDCASE
   31 expression: expression • OROP binary_op relation

    OROP  shift, and go to state 59

    $default  reduce using rule 22 ($@1)

    $@1  go to state 70


State 56

   31 expression: expression • OROP binary_op relation
   46 primary: '(' expression • ')'

    OROP  shift, and go to state 59
    ')'   shift, and go to state 71


State 57

   15 body: BEGIN_ statement_ END • ';'

    ';'  shift, and go to state 72


State 58

   16 statement_: statement ';' •

    $default  reduce using rule 16 (statement_)


State 59

   31 expression: expression OROP • binary_op relation

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    '('           shift, and go to state 31

    binary_op  go to state 73
    relation   go to state 36
    term       go to state 37
    factor     go to state 38
    exp_op     go to state 39
    unary_op   go to state 40
    primary    go to state 41


State 60

   33 binary_op: binary_op ANDOP • relation

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    '('           shift, and go to state 31

    relation  go to state 74
    term      go to state 37
    factor    go to state 38
    exp_op    go to state 39
    unary_op  go to state 40
    primary   go to state 41


State 61

   35 relation: relation RELOP • term

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    '('           shift, and go to state 31

    term      go to state 75
    factor    go to state 38
    exp_op    go to state 39
    unary_op  go to state 40
    primary   go to state 41


State 62

   37 term: term ADDOP • factor

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    '('           shift, and go to state 31

    factor    go to state 76
    exp_op    go to state 39
    unary_op  go to state 40
    primary   go to state 41


State 63

   39 factor: factor MULOP • exp_op

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    '('           shift, and go to state 31

    exp_op    go to state 77
    unary_op  go to state 40
    primary   go to state 41


State 64

   40 factor: factor REMOP • exp_op

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    '('           shift, and go to state 31

    exp_op    go to state 78
    unary_op  go to state 40
    primary   go to state 41


State 65

   42 exp_op: unary_op EXPOP • exp_op

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    '('           shift, and go to state 31

    exp_op    go to state 79
    unary_op  go to state 40
    primary   go to state 41


State 66

    2 function_header: FUNCTION IDENTIFIER parameter_ RETURNS type ';' •

    $default  reduce using rule 2 (function_header)


State 67

    7 variable: IDENTIFIER ':' type IS • statement_

    error         shift, and go to state 22
    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    REDUCE        shift, and go to state 28
    IF            shift, and go to state 29
    CASE          shift, and go to state 30
    '('           shift, and go to state 31

    statement_  go to state 80
    statement   go to state 33
    expression  go to state 34
    binary_op   go to state 35
    relation    go to state 36
    term        go to state 37
    factor      go to state 38
    exp_op      go to state 39
    unary_op    go to state 40
    primary     go to state 41


State 68

   19 statement: REDUCE operator reduction_ • ENDREDUCE
   29 reduction_: reduction_ • statement_

    error         shift, and go to state 22
    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    REDUCE        shift, and go to state 28
    ENDREDUCE     shift, and go to state 81
    IF            shift, and go to state 29
    CASE          shift, and go to state 30
    '('           shift, and go to state 31

    statement_  go to state 82
    statement   go to state 33
    expression  go to state 34
    binary_op   go to state 35
    relation    go to state 36
    term        go to state 37
    factor      go to state 38
    exp_op      go to state 39
    unary_op    go to state 40
    primary     go to state 41


State 69

   20 statement: IF expression THEN • statement_
   21          | IF expression THEN • statement_ ELSE statement_ ENDIF

    error         shift, and go to state 22
    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    REDUCE        shift, and go to state 28
    IF            shift, and go to state 29
    CASE          shift, and go to state 30
    '('           shift, and go to state 31

    statement_  go to state 83
    statement   go to state 33
    expression  go to state 34
    binary_op   go to state 35
    relation    go to state 36
    term        go to state 37
    factor      go to state 38
    exp_op      go to state 39
    unary_op    go to state 40
    primary     go to state 41


State 70

   23 statement: CASE expression $@1 • IS case_ OTHERS ARROW statement_ ENDCASE

    IS  shift, and go to state 84


State 71

   46 primary: '(' expression ')' •

    $default  reduce using rule 46 (primary)


State 72

   15 body: BEGIN_ statement_ END ';' •

    $default  reduce using rule 15 (body)


State 73

   31 expression: expression OROP binary_op • relation
   33 binary_op: binary_op • ANDOP relation

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    ANDOP         shift, and go to state 60
    NOTOP         shift, and go to state 27
    '('           shift, and go to state 31

    relation  go to state 85
    term      go to state 37
    factor    go to state 38
    exp_op    go to state 39
    unary_op  go to state 40
    primary   go to state 41


State 74

   33 binary_op: binary_op ANDOP relation •
   35 relation: relation • RELOP term

    RELOP  shift, and go to state 61

    $default  reduce using rule 33 (binary_op)


State 75

   35 relation: relation RELOP term •
   37 term: term • ADDOP factor

    ADDOP  shift, and go to state 62

    $default  reduce using rule 35 (relation)


State 76

   37 term: term ADDOP factor •
   39 factor: factor • MULOP exp_op
   40       | factor • REMOP exp_op

    MULOP  shift, and go to state 63
    REMOP  shift, and go to state 64

    $default  reduce using rule 37 (term)


State 77

   39 factor: factor MULOP exp_op •

    $default  reduce using rule 39 (factor)


State 78

   40 factor: factor REMOP exp_op •

    $default  reduce using rule 40 (factor)


State 79

   42 exp_op: unary_op EXPOP exp_op •

    $default  reduce using rule 42 (exp_op)


State 80

    7 variable: IDENTIFIER ':' type IS statement_ •

    $default  reduce using rule 7 (variable)


State 81

   19 statement: REDUCE operator reduction_ ENDREDUCE •

    $default  reduce using rule 19 (statement)


State 82

   29 reduction_: reduction_ statement_ •

    $default  reduce using rule 29 (reduction_)


State 83

   20 statement: IF expression THEN statement_ •
   21          | IF expression THEN statement_ • ELSE statement_ ENDIF

    ELSE  shift, and go to state 86

    $default  reduce using rule 20 (statement)


State 84

   23 statement: CASE expression $@1 IS • case_ OTHERS ARROW statement_ ENDCASE

    $default  reduce using rule 27 (case_)

    case_  go to state 87


State 85

   31 expression: expression OROP binary_op relation •
   35 relation: relation • RELOP term

    RELOP  shift, and go to state 61

    $default  reduce using rule 31 (expression)


State 86

   21 statement: IF expression THEN statement_ ELSE • statement_ ENDIF

    error         shift, and go to state 22
    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    REDUCE        shift, and go to state 28
    IF            shift, and go to state 29
    CASE          shift, and go to state 30
    '('           shift, and go to state 31

    statement_  go to state 88
    statement   go to state 33
    expression  go to state 34
    binary_op   go to state 35
    relation    go to state 36
    term        go to state 37
    factor      go to state 38
    exp_op      go to state 39
    unary_op    go to state 40
    primary     go to state 41


State 87

   23 statement: CASE expression $@1 IS case_ • OTHERS ARROW statement_ ENDCASE
   26 case_: case_ • case

    WHEN    shift, and go to state 89
    OTHERS  shift, and go to state 90

    case  go to state 91


State 88

   21 statement: IF expression THEN statement_ ELSE statement_ • ENDIF

    ENDIF  shift, and go to state 92


State 89

   28 case: WHEN • INT_LITERAL ARROW statement_

    INT_LITERAL  shift, and go to state 93


State 90

   23 statement: CASE expression $@1 IS case_ OTHERS • ARROW statement_ ENDCASE

    ARROW  shift, and go to state 94


State 91

   26 case_: case_ case •

    $default  reduce using rule 26 (case_)


State 92

   21 statement: IF expression THEN statement_ ELSE statement_ ENDIF •

    $default  reduce using rule 21 (statement)


State 93

   28 case: WHEN INT_LITERAL • ARROW statement_

    ARROW  shift, and go to state 95


State 94

   23 statement: CASE expression $@1 IS case_ OTHERS ARROW • statement_ ENDCASE

    error         shift, and go to state 22
    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    REDUCE        shift, and go to state 28
    IF            shift, and go to state 29
    CASE          shift, and go to state 30
    '('           shift, and go to state 31

    statement_  go to state 96
    statement   go to state 33
    expression  go to state 34
    binary_op   go to state 35
    relation    go to state 36
    term        go to state 37
    factor      go to state 38
    exp_op      go to state 39
    unary_op    go to state 40
    primary     go to state 41


State 95

   28 case: WHEN INT_LITERAL ARROW • statement_

    error         shift, and go to state 22
    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    REDUCE        shift, and go to state 28
    IF            shift, and go to state 29
    CASE          shift, and go to state 30
    '('           shift, and go to state 31

    statement_  go to state 97
    statement   go to state 33
    expression  go to state 34
    binary_op   go to state 35
    relation    go to state 36
    term        go to state 37
    factor      go to state 38
    exp_op      go to state 39
    unary_op    go to state 40
    primary     go to state 41


State 96

   23 statement: CASE expression $@1 IS case_ OTHERS ARROW statement_ • ENDCASE

    ENDCASE  shift, and go to state 98


State 97

   28 case: WHEN INT_LITERAL ARROW statement_ •

    $default  reduce using rule 28 (case)


State 98

   23 statement: CASE expression $@1 IS case_ OTHERS ARROW statement_ ENDCASE •

    $default  reduce using rule 23 (statement)

Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body

    2 function_header: FUNCTION IDENTIFIER parameter_ RETURNS type ';'
    3                | error ';'

    4 optional_variable: optional_variable variable
    5                  | error ';'
    6                  | ε

    7 variable: IDENTIFIER ':' type IS statement_

    8 parameter_: parameter_ ',' parameter
    9           | parameter
   10           | ε

   11 parameter: IDENTIFIER ':' type

   12 type: INTEGER
   13     | BOOLEAN
   14     | REAL

   15 $@1: ε

   16 body: BEGIN_ $@1 statement_ END ';'

   17 statement_: statement ';'
   18           | error ';'

   19 statement: expression
   20          | REDUCE operator reduction_ ENDREDUCE

   21 $@2: ε

   22 statement: IF expression $@2 THEN statement_ ELSE statement_ ENDIF

   23 $@3: ε

   24 $@4: ε

   25 statement: CASE expression $@3 IS case_ OTHERS ARROW statement_ $@4 ENDCASE

   26 operator: ADDOP
   27         | MULOP

   28 case_: case_ case
   29      | ε

   30 case: WHEN INT_LITERAL ARROW statement_

   31 reduction_: reduction_ statement_
   32           | ε

   33 expression: expression OROP relation
   34           | binary_op

   35 binary_op: binary_op ANDOP relation
   36          | relation

   37 relation: relation RELOP term
   38         | term

   39 term: term ADDOP factor
   40     | factor

   41 factor: factor MULOP exp_op
   42       | factor REMOP exp_op
   43       | exp_op

   44 exp_op: unary_op EXPOP exp_op
   45       | unary_op

   46 unary_op: NOTOP primary
   47         | primary

   48 primary: '(' expression ')'
   49        | INT_LITERAL
   50        | REAL_LITERAL
   51        | BOOL_LITERAL
   52        | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 48
    ')' (41) 48
    ',' (44) 8
    ':' (58) 7 11
    ';' (59) 2 3 5 16 17 18
    error (256) 3 5 18
    IDENTIFIER <iden> (258) 2 7 11 52
    INT_LITERAL <type> (259) 30 49
    BOOL_LITERAL <type> (260) 51
    REAL_LITERAL <type> (261) 50
    ADDOP (262) 26 39
    MULOP (263) 27 41
    REMOP (264) 42
    EXPOP (265) 44
    OROP (266) 33
    ANDOP (267) 35
    RELOP (268) 37
    NOTOP (269) 46
    INTEGER (270) 12
    REAL (271) 14
    BOOLEAN (272) 13
    BEGIN_ (273) 16
    END (274) 16
    FUNCTION (275) 2
    IS (276) 7 25
    RETURNS (277) 2
    REDUCE (278) 20
    ENDREDUCE (279) 20
    IF (280) 22
    THEN (281) 22
    ELSE (282) 22
    ENDIF (283) 22
    CASE (284) 25
    WHEN (285) 30
    ARROW (286) 25 30
    OTHERS (287) 25
    ENDCASE (288) 25


Nonterminals, with rules where they appear

    $accept (39)
        on left: 0
    function (40)
        on left: 1
        on right: 0
    function_header (41)
        on left: 2 3
        on right: 1
    optional_variable (42)
        on left: 4 5 6
        on right: 1 4
    variable (43)
        on left: 7
        on right: 4
    parameter_ (44)
        on left: 8 9 10
        on right: 2 8
    parameter (45)
        on left: 11
        on right: 8 9
    type <type> (46)
        on left: 12 13 14
        on right: 2 7 11
    body (47)
        on left: 16
        on right: 1
    $@1 (48)
        on left: 15
        on right: 16
    statement_ <type> (49)
        on left: 17 18
        on right: 7 16 22 25 30 31
    statement <type> (50)
        on left: 19 20 22 25
        on right: 17
    $@2 (51)
        on left: 21
        on right: 22
    $@3 (52)
        on left: 23
        on right: 25
    $@4 (53)
        on left: 24
        on right: 25
    operator (54)
        on left: 26 27
        on right: 20
    case_ <type> (55)
        on left: 28 29
        on right: 25 28
    case <type> (56)
        on left: 30
        on right: 28
    reduction_ <type> (57)
        on left: 31 32
        on right: 20 31
    expression <type> (58)
        on left: 33 34
        on right: 19 22 25 33 48
    binary_op <type> (59)
        on left: 35 36
        on right: 34 35
    relation <type> (60)
        on left: 37 38
        on right: 33 35 36 37
    term <type> (61)
        on left: 39 40
        on right: 37 38 39
    factor <type> (62)
        on left: 41 42 43
        on right: 39 40 41 42
    exp_op <type> (63)
        on left: 44 45
        on right: 41 42 43 44
    unary_op <type> (64)
        on left: 46 47
        on right: 44 45
    primary <type> (65)
        on left: 48 49 50 51 52
        on right: 46 47


State 0

    0 $accept: • function $end

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    function         go to state 3
    function_header  go to state 4


State 1

    3 function_header: error • ';'

    ';'  shift, and go to state 5


State 2

    2 function_header: FUNCTION • IDENTIFIER parameter_ RETURNS type ';'

    IDENTIFIER  shift, and go to state 6


State 3

    0 $accept: function • $end

    $end  shift, and go to state 7


State 4

    1 function: function_header • optional_variable body

    error  shift, and go to state 8

    IDENTIFIER  reduce using rule 6 (optional_variable)
    BEGIN_      reduce using rule 6 (optional_variable)

    optional_variable  go to state 9


State 5

    3 function_header: error ';' •

    $default  reduce using rule 3 (function_header)


State 6

    2 function_header: FUNCTION IDENTIFIER • parameter_ RETURNS type ';'

    IDENTIFIER  shift, and go to state 10

    $default  reduce using rule 10 (parameter_)

    parameter_  go to state 11
    parameter   go to state 12


State 7

    0 $accept: function $end •

    $default  accept


State 8

    5 optional_variable: error • ';'

    ';'  shift, and go to state 13


State 9

    1 function: function_header optional_variable • body
    4 optional_variable: optional_variable • variable

    IDENTIFIER  shift, and go to state 14
    BEGIN_      shift, and go to state 15

    variable  go to state 16
    body      go to state 17


State 10

   11 parameter: IDENTIFIER • ':' type

    ':'  shift, and go to state 18


State 11

    2 function_header: FUNCTION IDENTIFIER parameter_ • RETURNS type ';'
    8 parameter_: parameter_ • ',' parameter

    RETURNS  shift, and go to state 19
    ','      shift, and go to state 20


State 12

    9 parameter_: parameter •

    $default  reduce using rule 9 (parameter_)


State 13

    5 optional_variable: error ';' •

    $default  reduce using rule 5 (optional_variable)


State 14

    7 variable: IDENTIFIER • ':' type IS statement_

    ':'  shift, and go to state 21


State 15

   16 body: BEGIN_ • $@1 statement_ END ';'

    $default  reduce using rule 15 ($@1)

    $@1  go to state 22


State 16

    4 optional_variable: optional_variable variable •

    $default  reduce using rule 4 (optional_variable)


State 17

    1 function: function_header optional_variable body •

    $default  reduce using rule 1 (function)


State 18

   11 parameter: IDENTIFIER ':' • type

    INTEGER  shift, and go to state 23
    REAL     shift, and go to state 24
    BOOLEAN  shift, and go to state 25

    type  go to state 26


State 19

    2 function_header: FUNCTION IDENTIFIER parameter_ RETURNS • type ';'

    INTEGER  shift, and go to state 23
    REAL     shift, and go to state 24
    BOOLEAN  shift, and go to state 25

    type  go to state 27


State 20

    8 parameter_: parameter_ ',' • parameter

    IDENTIFIER  shift, and go to state 10

    parameter  go to state 28


State 21

    7 variable: IDENTIFIER ':' • type IS statement_

    INTEGER  shift, and go to state 23
    REAL     shift, and go to state 24
    BOOLEAN  shift, and go to state 25

    type  go to state 29


State 22

   16 body: BEGIN_ $@1 • statement_ END ';'

    error         shift, and go to state 30
    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    BOOL_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    REDUCE        shift, and go to state 36
    IF            shift, and go to state 37
    CASE          shift, and go to state 38
    '('           shift, and go to state 39

    statement_  go to state 40
    statement   go to state 41
    expression  go to state 42
    binary_op   go to state 43
    relation    go to state 44
    term        go to state 45
    factor      go to state 46
    exp_op      go to state 47
    unary_op    go to state 48
    primary     go to state 49


State 23

   12 type: INTEGER •

    $default  reduce using rule 12 (type)


State 24

   14 type: REAL •

    $default  reduce using rule 14 (type)


State 25

   13 type: BOOLEAN •

    $default  reduce using rule 13 (type)


State 26

   11 parameter: IDENTIFIER ':' type •

    $default  reduce using rule 11 (parameter)


State 27

    2 function_header: FUNCTION IDENTIFIER parameter_ RETURNS type • ';'

    ';'  shift, and go to state 50


State 28

    8 parameter_: parameter_ ',' parameter •

    $default  reduce using rule 8 (parameter_)


State 29

    7 variable: IDENTIFIER ':' type • IS statement_

    IS  shift, and go to state 51


State 30

   18 statement_: error • ';'

    ';'  shift, and go to state 52


State 31

   52 primary: IDENTIFIER •

    $default  reduce using rule 52 (primary)


State 32

   49 primary: INT_LITERAL •

    $default  reduce using rule 49 (primary)


State 33

   51 primary: BOOL_LITERAL •

    $default  reduce using rule 51 (primary)


State 34

   50 primary: REAL_LITERAL •

    $default  reduce using rule 50 (primary)


State 35

   46 unary_op: NOTOP • primary

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    BOOL_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    '('           shift, and go to state 39

    primary  go to state 53


State 36

   20 statement: REDUCE • operator reduction_ ENDREDUCE

    ADDOP  shift, and go to state 54
    MULOP  shift, and go to state 55

    operator  go to state 56


State 37

   22 statement: IF • expression $@2 THEN statement_ ELSE statement_ ENDIF

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    BOOL_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    '('           shift, and go to state 39

    expression  go to state 57
    binary_op   go to state 43
    relation    go to state 44
    term        go to state 45
    factor      go to state 46
    exp_op      go to state 47
    unary_op    go to state 48
    primary     go to state 49


State 38

   25 statement: CASE • expression $@3 IS case_ OTHERS ARROW statement_ $@4 ENDCASE

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    BOOL_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    '('           shift, and go to state 39

    expression  go to state 58
    binary_op   go to state 43
    relation    go to state 44
    term        go to state 45
    factor      go to state 46
    exp_op      go to state 47
    unary_op    go to state 48
    primary     go to state 49


State 39

   48 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    BOOL_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    '('           shift, and go to state 39

    expression  go to state 59
    binary_op   go to state 43
    relation    go to state 44
    term        go to state 45
    factor      go to state 46
    exp_op      go to state 47
    unary_op    go to state 48
    primary     go to state 49


State 40

   16 body: BEGIN_ $@1 statement_ • END ';'

    END  shift, and go to state 60


State 41

   17 statement_: statement • ';'

    ';'  shift, and go to state 61


State 42

   19 statement: expression •
   33 expression: expression • OROP relation

    OROP  shift, and go to state 62

    $default  reduce using rule 19 (statement)


State 43

   34 expression: binary_op •
   35 binary_op: binary_op • ANDOP relation

    ANDOP  shift, and go to state 63

    $default  reduce using rule 34 (expression)


State 44

   36 binary_op: relation •
   37 relation: relation • RELOP term

    RELOP  shift, and go to state 64

    $default  reduce using rule 36 (binary_op)


State 45

   38 relation: term •
   39 term: term • ADDOP factor

    ADDOP  shift, and go to state 65

    $default  reduce using rule 38 (relation)


State 46

   40 term: factor •
   41 factor: factor • MULOP exp_op
   42       | factor • REMOP exp_op

    MULOP  shift, and go to state 66
    REMOP  shift, and go to state 67

    $default  reduce using rule 40 (term)


State 47

   43 factor: exp_op •

    $default  reduce using rule 43 (factor)


State 48

   44 exp_op: unary_op • EXPOP exp_op
   45       | unary_op •

    EXPOP  shift, and go to state 68

    $default  reduce using rule 45 (exp_op)


State 49

   47 unary_op: primary •

    $default  reduce using rule 47 (unary_op)


State 50

    2 function_header: FUNCTION IDENTIFIER parameter_ RETURNS type ';' •

    $default  reduce using rule 2 (function_header)


State 51

    7 variable: IDENTIFIER ':' type IS • statement_

    error         shift, and go to state 30
    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    BOOL_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    REDUCE        shift, and go to state 36
    IF            shift, and go to state 37
    CASE          shift, and go to state 38
    '('           shift, and go to state 39

    statement_  go to state 69
    statement   go to state 41
    expression  go to state 42
    binary_op   go to state 43
    relation    go to state 44
    term        go to state 45
    factor      go to state 46
    exp_op      go to state 47
    unary_op    go to state 48
    primary     go to state 49


State 52

   18 statement_: error ';' •

    $default  reduce using rule 18 (statement_)


State 53

   46 unary_op: NOTOP primary •

    $default  reduce using rule 46 (unary_op)


State 54

   26 operator: ADDOP •

    $default  reduce using rule 26 (operator)


State 55

   27 operator: MULOP •

    $default  reduce using rule 27 (operator)


State 56

   20 statement: REDUCE operator • reduction_ ENDREDUCE

    $default  reduce using rule 32 (reduction_)

    reduction_  go to state 70


State 57

   22 statement: IF expression • $@2 THEN statement_ ELSE statement_ ENDIF
   33 expression: expression • OROP relation

    OROP  shift, and go to state 62

    $default  reduce using rule 21 ($@2)

    $@2  go to state 71


State 58

   25 statement: CASE expression • $@3 IS case_ OTHERS ARROW statement_ $@4 ENDCASE
   33 expression: expression • OROP relation

    OROP  shift, and go to state 62

    $default  reduce using rule 23 ($@3)

    $@3  go to state 72


State 59

   33 expression: expression • OROP relation
   48 primary: '(' expression • ')'

    OROP  shift, and go to state 62
    ')'   shift, and go to state 73


State 60

   16 body: BEGIN_ $@1 statement_ END • ';'

    ';'  shift, and go to state 74


State 61

   17 statement_: statement ';' •

    $default  reduce using rule 17 (statement_)


State 62

   33 expression: expression OROP • relation

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    BOOL_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    '('           shift, and go to state 39

    relation  go to state 75
    term      go to state 45
    factor    go to state 46
    exp_op    go to state 47
    unary_op  go to state 48
    primary   go to state 49


State 63

   35 binary_op: binary_op ANDOP • relation

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    BOOL_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    '('           shift, and go to state 39

    relation  go to state 76
    term      go to state 45
    factor    go to state 46
    exp_op    go to state 47
    unary_op  go to state 48
    primary   go to state 49


State 64

   37 relation: relation RELOP • term

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    BOOL_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    '('           shift, and go to state 39

    term      go to state 77
    factor    go to state 46
    exp_op    go to state 47
    unary_op  go to state 48
    primary   go to state 49


State 65

   39 term: term ADDOP • factor

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    BOOL_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    '('           shift, and go to state 39

    factor    go to state 78
    exp_op    go to state 47
    unary_op  go to state 48
    primary   go to state 49


State 66

   41 factor: factor MULOP • exp_op

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    BOOL_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    '('           shift, and go to state 39

    exp_op    go to state 79
    unary_op  go to state 48
    primary   go to state 49


State 67

   42 factor: factor REMOP • exp_op

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    BOOL_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    '('           shift, and go to state 39

    exp_op    go to state 80
    unary_op  go to state 48
    primary   go to state 49


State 68

   44 exp_op: unary_op EXPOP • exp_op

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    BOOL_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    '('           shift, and go to state 39

    exp_op    go to state 81
    unary_op  go to state 48
    primary   go to state 49


State 69

    7 variable: IDENTIFIER ':' type IS statement_ •

    $default  reduce using rule 7 (variable)


State 70

   20 statement: REDUCE operator reduction_ • ENDREDUCE
   31 reduction_: reduction_ • statement_

    error         shift, and go to state 30
    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    BOOL_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    REDUCE        shift, and go to state 36
    ENDREDUCE     shift, and go to state 82
    IF            shift, and go to state 37
    CASE          shift, and go to state 38
    '('           shift, and go to state 39

    statement_  go to state 83
    statement   go to state 41
    expression  go to state 42
    binary_op   go to state 43
    relation    go to state 44
    term        go to state 45
    factor      go to state 46
    exp_op      go to state 47
    unary_op    go to state 48
    primary     go to state 49


State 71

   22 statement: IF expression $@2 • THEN statement_ ELSE statement_ ENDIF

    THEN  shift, and go to state 84


State 72

   25 statement: CASE expression $@3 • IS case_ OTHERS ARROW statement_ $@4 ENDCASE

    IS  shift, and go to state 85


State 73

   48 primary: '(' expression ')' •

    $default  reduce using rule 48 (primary)


State 74

   16 body: BEGIN_ $@1 statement_ END ';' •

    $default  reduce using rule 16 (body)


State 75

   33 expression: expression OROP relation •
   37 relation: relation • RELOP term

    RELOP  shift, and go to state 64

    $default  reduce using rule 33 (expression)


State 76

   35 binary_op: binary_op ANDOP relation •
   37 relation: relation • RELOP term

    RELOP  shift, and go to state 64

    $default  reduce using rule 35 (binary_op)


State 77

   37 relation: relation RELOP term •
   39 term: term • ADDOP factor

    ADDOP  shift, and go to state 65

    $default  reduce using rule 37 (relation)


State 78

   39 term: term ADDOP factor •
   41 factor: factor • MULOP exp_op
   42       | factor • REMOP exp_op

    MULOP  shift, and go to state 66
    REMOP  shift, and go to state 67

    $default  reduce using rule 39 (term)


State 79

   41 factor: factor MULOP exp_op •

    $default  reduce using rule 41 (factor)


State 80

   42 factor: factor REMOP exp_op •

    $default  reduce using rule 42 (factor)


State 81

   44 exp_op: unary_op EXPOP exp_op •

    $default  reduce using rule 44 (exp_op)


State 82

   20 statement: REDUCE operator reduction_ ENDREDUCE •

    $default  reduce using rule 20 (statement)


State 83

   31 reduction_: reduction_ statement_ •

    $default  reduce using rule 31 (reduction_)


State 84

   22 statement: IF expression $@2 THEN • statement_ ELSE statement_ ENDIF

    error         shift, and go to state 30
    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    BOOL_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    REDUCE        shift, and go to state 36
    IF            shift, and go to state 37
    CASE          shift, and go to state 38
    '('           shift, and go to state 39

    statement_  go to state 86
    statement   go to state 41
    expression  go to state 42
    binary_op   go to state 43
    relation    go to state 44
    term        go to state 45
    factor      go to state 46
    exp_op      go to state 47
    unary_op    go to state 48
    primary     go to state 49


State 85

   25 statement: CASE expression $@3 IS • case_ OTHERS ARROW statement_ $@4 ENDCASE

    $default  reduce using rule 29 (case_)

    case_  go to state 87


State 86

   22 statement: IF expression $@2 THEN statement_ • ELSE statement_ ENDIF

    ELSE  shift, and go to state 88


State 87

   25 statement: CASE expression $@3 IS case_ • OTHERS ARROW statement_ $@4 ENDCASE
   28 case_: case_ • case

    WHEN    shift, and go to state 89
    OTHERS  shift, and go to state 90

    case  go to state 91


State 88

   22 statement: IF expression $@2 THEN statement_ ELSE • statement_ ENDIF

    error         shift, and go to state 30
    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    BOOL_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    REDUCE        shift, and go to state 36
    IF            shift, and go to state 37
    CASE          shift, and go to state 38
    '('           shift, and go to state 39

    statement_  go to state 92
    statement   go to state 41
    expression  go to state 42
    binary_op   go to state 43
    relation    go to state 44
    term        go to state 45
    factor      go to state 46
    exp_op      go to state 47
    unary_op    go to state 48
    primary     go to state 49


State 89

   30 case: WHEN • INT_LITERAL ARROW statement_

    INT_LITERAL  shift, and go to state 93


State 90

   25 statement: CASE expression $@3 IS case_ OTHERS • ARROW statement_ $@4 ENDCASE

    ARROW  shift, and go to state 94


State 91

   28 case_: case_ case •

    $default  reduce using rule 28 (case_)


State 92

   22 statement: IF expression $@2 THEN statement_ ELSE statement_ • ENDIF

    ENDIF  shift, and go to state 95


State 93

   30 case: WHEN INT_LITERAL • ARROW statement_

    ARROW  shift, and go to state 96


State 94

   25 statement: CASE expression $@3 IS case_ OTHERS ARROW • statement_ $@4 ENDCASE

    error         shift, and go to state 30
    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    BOOL_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    REDUCE        shift, and go to state 36
    IF            shift, and go to state 37
    CASE          shift, and go to state 38
    '('           shift, and go to state 39

    statement_  go to state 97
    statement   go to state 41
    expression  go to state 42
    binary_op   go to state 43
    relation    go to state 44
    term        go to state 45
    factor      go to state 46
    exp_op      go to state 47
    unary_op    go to state 48
    primary     go to state 49


State 95

   22 statement: IF expression $@2 THEN statement_ ELSE statement_ ENDIF •

    $default  reduce using rule 22 (statement)


State 96

   30 case: WHEN INT_LITERAL ARROW • statement_

    error         shift, and go to state 30
    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    BOOL_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    REDUCE        shift, and go to state 36
    IF            shift, and go to state 37
    CASE          shift, and go to state 38
    '('           shift, and go to state 39

    statement_  go to state 98
    statement   go to state 41
    expression  go to state 42
    binary_op   go to state 43
    relation    go to state 44
    term        go to state 45
    factor      go to state 46
    exp_op      go to state 47
    unary_op    go to state 48
    primary     go to state 49


State 97

   25 statement: CASE expression $@3 IS case_ OTHERS ARROW statement_ • $@4 ENDCASE

    $default  reduce using rule 24 ($@4)

    $@4  go to state 99


State 98

   30 case: WHEN INT_LITERAL ARROW statement_ •

    $default  reduce using rule 30 (case)


State 99

   25 statement: CASE expression $@3 IS case_ OTHERS ARROW statement_ $@4 • ENDCASE

    ENDCASE  shift, and go to state 100


State 100

   25 statement: CASE expression $@3 IS case_ OTHERS ARROW statement_ $@4 ENDCASE •

    $default  reduce using rule 25 (statement)
